When would you want to use a remote repository rather than keeping all your work local?

    Backup. Collaboration. Ubiquity.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    I would like to keep track of quality before sharing my code. I would also be sure to not clutter my remote with branchs that could break other parts of the rep.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?

    Branches operate locally on a repo. Clone copies a whole repo (and its branches/commits) from a place to another. I could clone from a remote machine to mine, or just clone from my machine into another place inside it. Fork it's a concept which applies to GitHub. Fork will basically help to clone a repo which is not mine into a repo of mine (in a very fast one-click way).

What is the benefit of having a copy of the last known state of the remote stored locally?

    It makes easier to spot the code I have add, and the differences between remote and local repositories. And also makes me a backup source in case the remote location becomes unavailable.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

    I would probably use dropbox. It will be hard to keep track of collaboration workflow. It would be easy to mess up other peoples source code :D

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?

    Fill in your answer here
